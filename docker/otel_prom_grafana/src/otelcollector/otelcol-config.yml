receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"

exporters:
  logging:
  prometheusremotewrite:
    # endpoint: http://admin:admin@prometheus:9090/api/v1/write
    endpoint: http://prometheus:9090/api/v1/write
    # export_created_metric:
    #   enabled: true
  prometheus:
    endpoint: 0.0.0.0:9090
    # startTime: "2023-02-07T00:00:08.979721+09:00"
    # endTime: "2023-02-08T00:00:01.048903+09:00"
    resource_to_telemetry_conversion:
      enabled: true

  influxdb:
    endpoint: http://influxdb:8086/api/v2/write
    timeout: 1s
    org: Shibly
    bucket: histogram-test
    token: "ei7mMUyvjHAoL0De18yZlD_8D7xc7aqWDR9-k2UNeRPtQR9YvfJ23yBjFoeEHbpSXchBMxy9lFY2UqeKssIy-g=="
    metrics_schema: telegraf-prometheus-v1

    sending_queue:
      enabled: true
      num_consumers: 3
      queue_size: 10

    retry_on_failure:
      enabled: true
      initial_interval: 1s
      max_interval: 3s
      max_elapsed_time: 10s

processors:
  batch:

service:
  telemetry:
    metrics:
      level: detailed
      address: 0.0.0.0:8888
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [logging]
    metrics:
      receivers: [otlp]
      processors: [batch]
      # exporters: [logging, prometheusremotewrite, influxdb]
      exporters: [logging]
    metrics/2:
      receivers: [otlp]
      processors: [batch]
      exporters: [prometheusremotewrite]
    metrics/3:
      receivers: [otlp]
      processors: [batch]
      exporters: [influxdb]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [logging]
